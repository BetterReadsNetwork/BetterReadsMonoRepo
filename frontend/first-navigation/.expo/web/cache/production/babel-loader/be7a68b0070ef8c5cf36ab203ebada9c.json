{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import*as React from'react';import Button from\"react-native-web/dist/exports/Button\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Image from\"react-native-web/dist/exports/Image\";import TextInput from\"react-native-web/dist/exports/TextInput\";import FlatList from\"react-native-web/dist/exports/FlatList\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import CheckBox from\"react-native-web/dist/exports/CheckBox\";var Discussions=function(_React$Component){_inherits(Discussions,_React$Component);function Discussions(props){var _this;_classCallCheck(this,Discussions);_this=_possibleConstructorReturn(this,_getPrototypeOf(Discussions).call(this,props));_this.state={isLoading:true};return _this;}_createClass(Discussions,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;return fetch('http://localhost:4444/api/discussions').then(function(response){return response.json();}).then(function(responseJson){_this2.setState({isLoading:false,dataSource:responseJson},function(){});}).catch(function(error){console.error(error);});}},{key:\"render\",value:function render(){var _this3=this;if(this.state.isLoading){return React.createElement(View,{style:{flex:1,padding:20}},React.createElement(ActivityIndicator,null));}var _this$state=this.state,error=_this$state.error,isLoaded=_this$state.isLoaded,items=_this$state.items;return React.createElement(View,{style:{flex:1,paddingTop:20}},React.createElement(\"h1\",null,\"Discussions\"),this.state.dataSource.map(function(item){return React.createElement(View,null,React.createElement(Button,{title:item.title,onPress:function onPress(){return _this3.props.navigation.navigate('Discussion',{id:item._id});}}));}),React.createElement(TextInput,{name:\"title\",placeholder:\"Title\",onChangeText:function onChangeText(text){return _this3.setState({title:text});}}),React.createElement(TextInput,{name:\"book\",placeholder:\"Book\",onChangeText:function onChangeText(text){return _this3.setState({book:text});}}),React.createElement(Text,null,React.createElement(CheckBox,{title:\"Private\",name:\"Private\",checked:this.state.checked}),\" Private\"),React.createElement(Button,{title:\"Create Discussion\",onPress:function onPress(){fetch('http://localhost:4444/createThread',{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify({title:_this3.state.title,book:_this3.state.book})}).then(function(res){return res.json();}).then(function(response){console.error(\"Sucess\");_this3.props.navigation.navigate('Referrer');fetch('http://localhost:4444/api/discussions').then(function(response){return response.json();}).then(function(responseJson){_this3.setState({isLoading:false,dataSource:responseJson},function(){});_this3.props.navigation.navigate('Referrer');_this3.props.navigation.navigate('Referrer',{last:\"Discussion\",id:_this3.state.dataSource.thread._id});}).catch(function(error){console.error(error);});},_this3.props.navigation.navigate('Home',{last:\"Discussion\",id:_this3.state.dataSource.thread._id})).catch(function(error){console.error(error);_this3.setState({state:_this3.state});});}}));}}]);return Discussions;}(React.Component);export{Discussions as default};","map":{"version":3,"sources":["/home/steffen/UPenn19-20/CIS350/BetterReadsMonoRepo/frontend/first-navigation/views/Discussions.js"],"names":["React","Discussions","props","state","isLoading","fetch","then","response","json","responseJson","setState","dataSource","catch","error","console","flex","padding","isLoaded","items","paddingTop","map","item","title","navigation","navigate","id","_id","text","book","checked","method","headers","Accept","body","JSON","stringify","res","last","thread","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button, View, Text ,Image, TextInput,FlatList,ActivityIndicator,CheckBox } from 'react-native';\nexport default class Discussions extends React.Component {\n   constructor(props){\n    super(props);\n    this.state ={ isLoading: true}\n  }\n\n  componentDidMount(){\n    \n    return fetch('http://localhost:4444/api/discussions')\n      .then((response) => response.json())\n      .then((responseJson) => {\n\n        this.setState({\n          isLoading: false,\n          dataSource: responseJson,\n        }, function(){\n\n        });\n\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n  }\n\n\n\n  render(){\n\n    if(this.state.isLoading){\n      return(\n        <View style={{flex: 1, padding: 20}}>\n          <ActivityIndicator/>\n        </View>\n      )\n    }\n  const { error, isLoaded, items } = this.state\n    return(\n      <View style={{flex: 1, paddingTop:20}}>\n      <h1>Discussions</h1>\n        {this.state.dataSource.map(item => {\n          return (\n            <View>\n            <Button title={item.title} onPress={() => this.props.navigation.navigate('Discussion', {id: item._id})} />\n          \n      </View>\n           \n          )}\n        )}\n        <TextInput name=\"title\" placeholder=\"Title\" onChangeText={(text)=>this.setState({title: text})}/>\n        <TextInput name=\"book\"  placeholder=\"Book\" onChangeText={(text)=>this.setState({book: text})}/>\n        <Text><CheckBox\n  title='Private' name='Private'\n  checked={this.state.checked}\n/> Private</Text>\n        <Button title=\"Create Discussion\" onPress={()=>{\n           \n           fetch('http://localhost:4444/createThread', {\n      method: 'POST',\n    headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    title: this.state.title,\n    book: this.state.book\n  })\n\n    }).then(res=>res.json())\n    .then(response =>{\n      console.error(\"Sucess\");\n       this.props.navigation.navigate('Referrer')\n       fetch('http://localhost:4444/api/discussions')\n      .then((response) => response.json())\n      .then((responseJson) => {\n\n        this.setState({\n          isLoading: false,\n          dataSource: responseJson,\n        }, function(){\n\n        });\n        this.props.navigation.navigate('Referrer')\n         this.props.navigation.navigate('Referrer', {last: \"Discussion\",id: this.state.dataSource.thread._id})\n      //  this.props.navigation.navigate('Referrer', {last: \"Discussion\",id: this.state.dataSource.thread._id})\n      //  this.forceUpdate()\n    //   this.setState({ state: this.state });\n      })\n      .catch((error) =>{\n        console.error(error);\n        \n      });\n  },\n   this.props.navigation.navigate('Home', {last: \"Discussion\",id: this.state.dataSource.thread._id})\n //      this.props.navigation.navigate('Discussion', {id: this.state.dataSource.thread._id})\n     //  this.forceUpdate()\n       \n        // this.props.navigation.navigate('Discussion', {id: this.state.dataSource.thread._id})\n    \n\n    ).catch((error) =>{\n      console.error(error);\n  //    this.props.navigation.navigate('Discussion', {id: this.state.dataSource.thread._id})\n   //   this.props.navigation.navigate('Discussion', {id:this.state.dataSource.thread._id})\n     // this.forceUpdate()\n       this.setState({ state: this.state });\n    });\n        }}/>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}